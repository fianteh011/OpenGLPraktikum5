in vec2 newTexture;
in vec3 fragNormal;

in vec3 newSunlightDirection;
in vec3 newAmbientLightIntensity;
in vec3 newSunlightIntensity;

out vec4 outColor;
uniform sampler2D samplerTexture;

void main()
{
    //vec3 ambientLightIntensity = vec3(0.2f, 0.2f, 0.4f); //Grundbeleuchtung in rgb
    //vec3 sunLightIntensity = vec3(1.5f, 1.5f, 0.5f); //Sonnenlicht in rgb
    //vec3 sunLightDirection = normalize(vec3(10.0f, 10.0f, 4.0f)); // Lichtrichtung

    vec4 texel = texture(samplerTexture, newTexture);
    // lambert_beleuchtungsmodell f√ºr diffuse Lichtwirkung
    float diffuse = 0.9;
    vec3 lightIntensity = ambientLightIntensity + diffuse * sunLightIntensity * max(dot(fragNormal, sunLightDirection), 0.0f);

    outColor = vec4(texel.rgb * lightIntensity, texel.a);
}